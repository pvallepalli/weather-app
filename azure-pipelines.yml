trigger:
  branches:
    include:
      - master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '123456789'
  # Web app name
  webAppName: 'weather-app'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Environment name
  environmentName: 'dev'

pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      vmImage: $(vmImageName)    
    steps:
      - script: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
        displayName: 'Install dependencies'

      - script: |
          python -m unittest discover tests/
        displayName: 'Run tests'

      - publish: $(System.DefaultWorkingDirectory)
        artifact: 'weather-webapp'

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: DeployWebApp
      displayName: 'Deploy Web App'
      environment: 'dev'
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureWebApp@1
              displayName: 'Azure Web App Deploy'
              inputs:
                azureSubscription: $(azureServiceConnectionId)
                appName: $(webAppName)
                package: '$(Pipeline.Workspace)/weather-webapp'
                appSettings: | 
                  [
                    {
                      "name": "GMAPS_API_KEY",
                      "value": $(GMAPS_API_KEY),
                      "slotSetting": false
                    }
                  ]
        